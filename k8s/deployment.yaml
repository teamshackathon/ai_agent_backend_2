apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-2-backend
  namespace: furniaizer
  labels:
    app: ai-agent-2-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-agent-2-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-agent-2-backend
    spec:
      initContainers:
      - name: discord-notification
        image: alpine/curl
        command:
        - sh
        - -c
        - |
          WEBHOOK_URL="${DISCORD_WEBHOOK_URL}"
          POD_NAME="${POD_NAME:-$(hostname)}"
          NAMESPACE="${POD_NAMESPACE:-default}"
          DEPLOYMENT="ai-agent-2-backend"
          PRODUCTION_URL="${PRODUCTION_URL:-N/A}"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
              \"embeds\": [{
                \"title\": \"üöÄ Pod Restarted\",
                \"description\": \"A pod has been restarted in the Kubernetes cluster.\",
                \"color\": 5814783,
                \"fields\": [
                  {\"name\": \"üìõ Pod Name\", \"value\": \"$POD_NAME\", \"inline\": true},
                  {\"name\": \"üì¶ Deployment\", \"value\": \"$DEPLOYMENT\", \"inline\": true},
                  {\"name\": \"üìç Namespace\", \"value\": \"$NAMESPACE\", \"inline\": true},
                  {\"name\": \"üîó URL\", \"value\": \"$PRODUCTION_URL\", \"inline\": false}
                ],
                \"timestamp\": \"$TIMESTAMP\"
              }]
            }" \
            "$WEBHOOK_URL"
        env:
        - name: DISCORD_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: furniaizer-github-client-secret
              key: DISCORD_WEBHOOK_URL
        - name: PRODUCTION_URL
          valueFrom:
            secretKeyRef:
              name: furniaizer-github-client-secret
              key: PRODUCTION_URL
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      containers:
      - name: backend
        image: ghcr.io/teamshackathon/prod/ai-agent-2-backend:latest
        imagePullPolicy: Always
        command: ["uvicorn"]
        args: ["main:app", "--host", "0.0.0.0", "--port", "8000"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: ALLOWED_ORIGINS
          value: "https://163.44.125.128"
        - name: OPENAPI_URL
          value: "/api-furniaizer"
        - name: FRONTEND_REDIRECT_URL
          value: "https://163.44.125.128/furniaizer/auth/callback"
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
                name: furniaizer-github-client-secret
                key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: furniaizer-github-client-secret
              key: github-client-secret
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: furniaizer-github-client-secret
              key: google-api-key
        - name: GOOGLE_CHAT_MODEL
          value: "gemini-2.0-flash"
        - name: FIREBASE_CREDENTIALS_PATH
          value: "/app/secrets/firebase-credentials.json"
        volumeMounts:
        # FirebaseË™çË®ºÊÉÖÂ†±JSON„Éï„Ç°„Ç§„É´„ÅÆ„Éû„Ç¶„É≥„Éà
        - name: firebase-credentials
          mountPath: "/app/secrets"
          readOnly: true
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /api/v1/healthcheck/liveness
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/healthcheck/readiness
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
      volumes:
      # FirebaseË™çË®ºÊÉÖÂ†±„ÅÆ„Éú„É™„É•„Éº„É†ÂÆöÁæ©
      - name: firebase-credentials
        secret:
          secretName: furniaizer-firebase-credentials
          items:
          - key: firebase-credentials.json
            path: firebase-credentials.json